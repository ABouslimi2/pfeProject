{% extends 'base.html.twig' %}
{% block body %}

<script>
	var data = {{ locations | raw }}
	var dataTeams = {{ teams | json_encode() | raw }}
	var map;
	// Initialize and add the map
	function initMap() {
		map = new google.maps.Map(document.getElementById('map'), {
		center: {
			lat: 43.296482,
			lng: 5.36978
		},
			zoom: 3
	});	

	var marker = [];
	var contentString = [];
	var infowindow = [];

	for (var i = 0; i < data.length; i++) {

		marker[i] = new google.maps.Marker({
			position: {
			lat: data[i].lattitude,
			lng: data[i].longitude
			},
			map: map
			});
			map.setOptions({draggable: false, zoomControl: false, scrollwheel: false, disableDoubleClickZoom: false});
			contentString[i] = '<div id="content">' + '<div id="siteNotice">' + '</div>' + '<h1 id="firstHeading" class="firstHeading">' + data[i].address + '</h1>' + '<div id="bodyContent">' + '<p><b>' + data[i].teamName + '</b></br><b> <img src="{{asset('assets/images/commit.png') }}"/> Commits Number : ' + data[i].commits+'</b></br><b><img src="{{asset('assets/images/rel.png') }}"/> Releases Number : ' + data[i].releases+'</b></br><b><i class="fa fa-code-fork" aria-hidden="true"></i> Merge Requests Number : '+data[i].merges+'</b>' ;
			infowindow[i] = new google.maps.InfoWindow({content: contentString[i]});
			var mdl = marker[i];
			google.maps.event.addListener(marker[i], 'mouseover', (function (mdl, i) {
			return function () {
			infowindow[i].open(map, marker[i]);
			}
		})(marker[i], i));
		google.maps.event.addListener(marker[i], 'mouseout', (function (mdl, i) {
		return function () {
		infowindow[i].close(map, marker[i]);
		}
		})(marker[i], i));
	}
}
</script>
	<!--**********************************
	            Content body start
	        ***********************************-->
	<div class="content-body ">
		<div class="row page-titles mx-0">
			<div class="col p-md-0">
				<ol class="breadcrumb">
					<li class="breadcrumb-item">
						<a href="javascript:void(0)">Dashboard</a>
					</li>
					<li class="breadcrumb-item active">
						<a href="javascript:void(0)">Home</a>
					</li>
				</ol>
			</div>
		</div>
		<style>
			.multiselect {
				width: 300px;
			}

			.selectBox {
				position: relative;
			}

			.selectBox select {
				width: 100%;
				font-weight: bold;
			}

			.overSelect {
				position: absolute;
				left: 0;
				right: 0;
				top: 0;
				bottom: 0;
			}

			#checkboxes {
				display: none;
				border: 1px #dadada solid;
			}

			#checkboxes label {
				display: block;
			}

			#checkboxes label:hover {
				background-color: #1e90ff;
			}
		</style>
		<style>
			.likeLink {
				background: none !important;
				border: none;
				padding: 0 !important;
				/*optional*/
				font-family: arial, sans-serif;
				/*input has OS specific font-family*/
				color: #FF0000;

				cursor: pointer;
			}
		</style>
<script>
	var expanded = false;
	function showCheckboxes() {
		var checkboxes = document.getElementById("checkboxes");
		if (! expanded) {
		checkboxes.style.display = "block";
		expanded = true;
		} else {
		checkboxes.style.display = "none";
		expanded = false;
		}
	}
</script>
		<!-- row -->
	
	<!--	<script>
								$('#isSelected').bind('change', function () {
	
									if ($(this).is(':checked'))
										alert("Checked");
									else
										alert("Unchecked");
	
									});
								</script>  -->

<script>
	$(document).ready(function () {
		$('#checkCheckbox').on('click', function (event) {
		event.preventDefault();
		var ids = [];

		$('.ids:checked').each(function (i, e) {
		if ($(e).is(':checked')) {
		ids.push($(e).val());
		}
	});

			$.ajax({
			type: 'get',
			url: "{{ path('loadInstant') }}",
			data: {
			ids
			},
			success: function (data, response) {
			console.log(data);
			$(".loadNew").html(data.html);

			}
		});
	});
});
</script>
	<div class="container-fluid">
	<div class="card" style="margin-right:5px;">	
		<div class="card-body">
		<div class="row">
			<div class="col-sm" >
			<h4 class="card-title">Select Git servers to visit projects</h4>
			</div>
			<div class="col-sm" >
				 <div class="btn-group pull-right" style="margin-top:1px;margin-bottom:25px;">
					<button  type="button" class="btn mb-1 btn-danger pull-right" data-toggle="modal" data-target="#basicModal">Add Git Server
						<i class="fa fa-plus" aria-hidden="true"></i>
					</button>
				</div>
			</div>
		</div>
			<div class="basic-form">

				<form>
				<table>
				<tr>
				<td>
					<div class="multiselect">
						<div class="selectBox" onclick="showCheckboxes()">
							<select>
								<option>Select Git Server URL </option>
							</select>
						
							<div class="overSelect"></div>
						</div>
						<div id="checkboxes">

							{% for team in teams %}
							{% if 'Gitlab' == team.gitType %}
								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

								<input type="checkbox" class="form-check-input ids" value="{{team.gitlabURL}}" name="ids[]" id="isSelected">{{team.gitlabURL}}</br>
							{% endif %}
						{%  endfor %}

					</div>
				</td>
				<td>
						<button id="checkCheckbox" class="likeLink">
						<i class="fa fa-search" aria-hidden="true"></i>&nbsp;&nbsp;Search
					</button>
				</td>
				
					</tr>
				</table>
				</form>
		</div>
	</div>
	<div id="response"></div>
	<div class="loadNew"></div>
	
		
	
		<!-- Modal -->

		<div class="modal fade" id="basicModal" style="display: none;" aria-hidden="true">
			<div class="modal-dialog" role="document">
				<form id="formAdd" name="formAdd" action="{{ path('add_team') }}" method="POST">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title">Add Git Server</h5>
							<button type="button" class="close" data-dismiss="modal">
								<span>Ã—</span>
							</button>
						</div>
						<div class="modal-body">
							<div class="card-body">
								<div class="basic-form">

									<div class="form-group row">
										<label class="col-sm-2 col-form-label">Team Name</label>
										<div class="col-sm-10">
											<input type="text" class="form-control" placeholder="Enter your team name" name="team" id="myName">
										</div>
										<div id="requiredTeam" style="display: none;">
											<p style="color:red;">
												<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
																		Field team name is required !</b>
											</p>
										</div>
										<div id="TeamNameExist" style="display: none;">
											<p style="color:red;">
												<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
																		Team name already exists !</b>
											</p>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-sm-2 col-form-label">Git Server URL</label>
										<div class="col-sm-10">
											<input type="text" class="form-control" placeholder="Enter your gitlab server URL" name="gitlabURL" id="myUrl">
										</div>
										<div id="requiredUrl" style="display: none;">
											<p style="color:red;">
												<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
																									Server URL is required !</b>
											</p>
										</div>
										<div id="GitURLExist" style="display: none;">
											<p style="color:red;">
												<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
																		Git Server already exists !</b>
											</p>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-sm-2 col-form-label">Git Token</label>
										<div class="col-sm-10">
											<input type="text" class="form-control" placeholder="Enter your gitlab token" name="token" minlength="20" maxlength="20" id="myToken">
										</div>

										<div id="requiredToken" style="display: none;">
											<p style="color:red;">
												<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
																									Token is required !</b>
											</p>
										</div>
										<div id="requiredTokenLength" style="display: none;">
											<p style="color:red;">
												<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
																									This field must be of length 20  !</b>
											</p>
										</div>

									</div>
									<div class="form-group row">
										<label class="col-sm-2 col-form-label">Git Type</label>
										<div class="col-sm-10">

											<select name="gitType" class="form-control">
												<option selected="selected" value="Gitlab">Gitlab</option>
												<option value="Github">Github</option>

											</select>
										</div>

										<div class="form-group row">
											<div class="col-sm-10 ">
												<button type="button" data-href="{{ path('addTeamDash') }}" class="btn btn-danger addBtn">Save
												</button>
											</div>
										</div>
									</div>
								</div>

							</div>

						</div>
					</form>
				</div>
			</div>
		</div>
		
		</br>
			<div style="margin-left:1px;" class="addItemTeam">
				<div  id="map" style="width: 969px; height:600px"></div>
			</div><!-- #/ container -->
	</div>
		



<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBnzV3UH6ciiKF-_2ooRflGR2ZEl8W0aGY
	     &callback=initMap&libraries=&v=weekly" async defer>
</script>

<script>
	const appendChild = Element.prototype.appendChild;
	const urlCatchers = ["/AuthenticationService.Authenticate?", "/QuotaService.RecordEvent?"];
	Element.prototype.appendChild = function (element) {
		const isGMapScript = element.tagName === 'SCRIPT' && /maps\.googleapis\.com/i.test(element.src);
		const isGMapAccessScript = isGMapScript && urlCatchers.some(url => element.src.includes(url));

	if (! isGMapAccessScript) {
		return appendChild.call(this, element);
	}
		return element;
	};
</script>

<script type="text/javascript">
	$(document).ready(function () {
	$('.addBtn').on('click', function () {

		var myName = document.getElementById("myName").value;
		var myUrl = document.getElementById("myUrl").value;
		var myToken = document.getElementById("myToken").value;
		var data = $('#formAdd').serialize();
		var url = $(this).data('href');
		console.log('1 ' + data + ' ++++++++++++2 ' + url);
		var aaa = {{ names | raw }}
		const b = aaa.map(name => name.toUpperCase());

		var aaaa = {{ urls | raw }}
		const bb = aaaa.map(servurl => servurl.toUpperCase());

		if (b.includes(myName.toUpperCase())) {
			$('#TeamNameExist').show();
			$('#TeamNameExist').delay(3000).hide(1);
		} else if (myName == "") {
			$('#requiredTeam').show();
			$('#requiredTeam').delay(3000).hide(1);
		}
		else if (bb.includes(myUrl.toUpperCase())) {
			$('#GitURLExist').show();
			$('#GitURLExist').delay(3000).hide(1);
		}
		 else if (myUrl == "") {
			$('#requiredUrl').show();
			$('#requiredUrl').delay(3000).hide(1);
		} else if (myToken == "") {
			$('#requiredToken').show();
			$('#requiredToken').delay(3000).hide(1);
		} else if (myToken.length != 20) {
			$('#requiredTokenLength').show();
			$('#requiredTokenLength').delay(3000).hide(1);
		} else {

			$.ajax({
			type: 'post',
			url: url,
			data: data,
			success: function (data, response) {

				// $(".addItemTeam").load(location.href + " .addItemTeam");
				// $(".addItemTeam").load(" .addItemTeam");
				$('#basicModal').modal('toggle');
				$('.modal-backdrop.fade.show').hide();
				toastr.success('Team created successfuly.', 'CREATED', {timeOut: 5000})

				}
			});
		}
	});
});
</script>

<!--<script type="text/javascript">
		setInterval("my_function();",5000); 
		function my_function(){
			$.ajax({
				type: 'get',
				url: "{{ path('testtest') }}",
				data: data,
					success: function (data, response) {
						console.log('1');
							$(".loadNew").html(data.html);
					}
			});
		}
	</script>-->
{% endblock %}

